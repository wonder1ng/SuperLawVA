# 🔐 환경변수를 사용한 안전한 설정 파일
spring:
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:local}

  # JPA 공통 설정
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        format_sql: true
        use_sql_comments: true

  # 📧 이메일 설정 (환경변수 사용)
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
          debug: true
        debug: true

# 🌐 앱 설정
app:
  email:
    enabled: true
  frontend:
    url: ${FRONTEND_URL:http://localhost:3000}

# 🔑 카카오 로그인 설정 (환경변수 사용)
kakao:
  client-id: ${KAKAO_CLIENT_ID}
  client-secret: ${KAKAO_CLIENT_SECRET}
  redirect-uri: ${KAKAO_REDIRECT_URI:http://localhost:5173/oauth/kakao/callback}

# 🔑 네이버 로그인 설정 (환경변수 사용)
naver:
  client-id: ${NAVER_CLIENT_ID}
  client-secret: ${NAVER_CLIENT_SECRET}
  redirect-uri: ${NAVER_REDIRECT_URI:http://localhost:5173/oauth/naver/callback}

# 🔒 JWT 설정 (환경변수 사용)
jwt:
  secret: ${JWT_SECRET}
  access-token-validity: 3600000
  refresh-token-validity: 604800000

# Swagger 설정
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: alpha
  packages-to-scan: com.springboot.controller

# 서버 설정
server:
  port: ${SERVER_PORT:8080}

# 로깅 설정
logging:
  level:
    com.springboot: DEBUG
    org.springframework.security: DEBUG
    org.springframework.mail: TRACE
    org.springframework.data.redis: DEBUG
    org.hibernate.SQL: DEBUG
    com.sun.mail: DEBUG

---
# 🏠 로컬 개발 환경
spring:
  config:
    activate:
      on-profile: local

  # 🗄️ 로컬 MySQL 설정 (환경변수 사용)
  datasource:
    url: ${DATABASE_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver

  # 🐳 Docker Redis 설정
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0

---
# 🚀 운영 환경
spring:
  config:
    activate:
      on-profile: prod

  # 🗄️ 운영 MySQL 설정
  datasource:
    url: ${DATABASE_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver

  # ☁️ Redis Cloud 설정
  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD}
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 20
          max-idle: 10
          min-idle: 5
        ssl:
          enabled: ${REDIS_SSL_ENABLED:true}

  # 운영 JPA 설정
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false

# 운영 서버 설정
server:
  port: ${PORT:8080}

# 운영 로깅 (최소화)
logging:
  level:
    com.springboot: INFO
    org.springframework.security: WARN
    org.springframework.data.redis: WARN
    org.hibernate.SQL: WARN
