spring:
  profiles:
    active: local  # 기본 프로필

  # 공통 설정
  jpa:
    hibernate:
      ddl-auto: update  # create → update로 변경 (운영 시 validate)
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        format_sql: true
        use_sql_comments: true
    defer-datasource-initialization: true

  # SQL 초기화 설정
  sql:
    init:
      mode: never  # 운영에서는 never, 개발에서는 always

  # 🟢 새로 추가: 이메일 설정 (선택적)
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME:}
    password: ${MAIL_PASSWORD:}  # Gmail 앱 비밀번호
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

# 🟢 새로 추가: 앱 설정
app:
  email:
    enabled: ${EMAIL_ENABLED:false}  # 이메일 기능 활성화 여부
  frontend:
    url: ${FRONTEND_URL:http://localhost:3000}  # React 앱 URL

# 🔵 기존: 카카오 로그인 설정
kakao:
  client-id: d5169e8b3457cc1295d2140ed61a3057
  client-secret: sGP9vhD5egFqjx3YogukbQBTf3KLKzbX
  redirect-uri: http://localhost:5173/oauth/kakao/callback

# 🔵 기존: 네이버 로그인 설정
naver:
  client-id: orAsAb4EzjWjhfXYwkYf
  client-secret: EnRBtf2cax
  redirect-uri: http://localhost:5173/oauth/naver/callback

# 🔵 기존: JWT 설정 (더 강화된 설정 사용)
jwt:
  secret: ${JWT_SECRET:JWT_SECRET_1234_JWT_SECRET_1234_JWT_SECRET_1234_JWT_SECRET_1234}
  access-token-validity: 3600000    # 1시간 (3600초 * 1000ms)
  refresh-token-validity: 604800000 # 7일 (7일 * 24시간 * 3600초 * 1000ms)

# Swagger 설정
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: alpha
  packages-to-scan: com.springboot.controller
  default-consumes-media-type: application/json
  default-produces-media-type: application/json

# 로깅 설정
logging:
  level:
    com.springboot: DEBUG
    org.springframework.security: DEBUG
    org.springframework.mail: DEBUG  # 🟢 새로 추가: 이메일 로깅
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE

---
# 로컬 개발 환경 (MySQL) - 소셜 로그인 기반 설정 사용
spring:
  config:
    activate:
      on-profile: local

  datasource:
    url: jdbc:mysql://localhost:3307/legal_ai_db?serverTimezone=Asia/Seoul&characterEncoding=UTF-8&useSSL=false&allowPublicKeyRetrieval=true
    username: ${DB_USERNAME:legal_ai_user}
    password: ${DB_PASSWORD:xodud2355}
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true

server:
  port: 8080

---
# 🟢 새로 추가: 테스트 환경
spring:
  config:
    activate:
      on-profile: test

  datasource:
    url: jdbc:h2:mem:testdb
    username: sa
    password:
    driver-class-name: org.h2.Driver

  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true

  h2:
    console:
      enabled: true

server:
  port: 8081

---
# 🟢 새로 추가: 운영 환경
spring:
  config:
    activate:
      on-profile: prod

  datasource:
    url: ${DATABASE_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: validate  # 운영에서는 validate 사용
    show-sql: false

  sql:
    init:
      mode: never

server:
  port: ${PORT:8080}

# 운영 환경에서는 디버그 로깅 비활성화
logging:
  level:
    com.springboot: INFO
    org.springframework.security: WARN
    org.hibernate.SQL: WARN